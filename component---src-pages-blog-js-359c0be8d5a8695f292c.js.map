{"version":3,"file":"component---src-pages-blog-js-359c0be8d5a8695f292c.js","mappings":"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","sources":["webpack://Adiela Abishua - Portfolio Website/./src/components/BlogLayout.js","webpack://Adiela Abishua - Portfolio Website/./src/components/bio.js","webpack://Adiela Abishua - Portfolio Website/./src/components/seo.js","webpack://Adiela Abishua - Portfolio Website/./src/pages/blog.js"],"sourcesContent":["import * as React from 'react';\nimport Layout from './Layout';\n\nfunction BlogLayout({ children }) {\n  return (\n    <Layout>\n      <div className=\"container\">\n        <main>{children}</main>\n        <footer id=\"blog-footer\">\n          Â©\n          {' '}\n          {new Date().getFullYear()}\n          , Built by\n          {' '}\n          <a href=\"https://www.github.com/adiela\">Adiela Abishua</a>\n          {'  with '}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </Layout>\n\n  );\n}\n\nexport default BlogLayout;\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nfunction Bio() {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            github\n          }\n        }\n      }\n    }\n  `);\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author;\n  const social = data.site.siteMetadata?.social;\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={['auto', 'webp', 'avif']}\n        src=\"../images/adiela_abishua.jpg\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by\n          {' '}\n          <strong><a href={`https://github.com/${social?.github || ''}`}>{author.name}</a></strong>\n          {' '}\n          {author?.summary || null}\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default Bio;\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ''}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n}\n\nexport default Seo;\n","import * as React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/bio';\nimport BlogLayout from '../components/BlogLayout';\nimport Seo from '../components/seo';\n\nfunction BlogIndex({ data, location }) {\n  const siteTitle = data.site.siteMetadata?.title || 'Title';\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <BlogLayout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </BlogLayout>\n    );\n  }\n\n  return (\n    <BlogLayout location={location} title={siteTitle}>\n      <Bio />\n      <ol style={{ listStyle: 'none' }}>\n        {posts.map((post) => {\n          const title = post.frontmatter.title || post.fields.slug;\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          );\n        })}\n      </ol>\n    </BlogLayout>\n  );\n}\n\nexport default BlogIndex;\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport function Head() {\n  return <Seo title=\"All posts\" />;\n}\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n"],"names":["children","className","id","Date","getFullYear","href","data","useStaticQuery","author","site","siteMetadata","social","S","layout","formats","src","width","height","quality","alt","name","github","summary","description","title","metaDescription","defaultTitle","content","property","twitter","Head","location","siteTitle","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","excerpt"],"sourceRoot":""}