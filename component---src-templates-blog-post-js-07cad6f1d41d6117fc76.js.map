{"version":3,"file":"component---src-templates-blog-post-js-07cad6f1d41d6117fc76.js","mappings":"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","sources":["webpack://Adiela Abishua - Portfolio Website/./src/components/BlogLayout.js","webpack://Adiela Abishua - Portfolio Website/./src/components/bio.js","webpack://Adiela Abishua - Portfolio Website/./src/components/seo.js","webpack://Adiela Abishua - Portfolio Website/./src/templates/blog-post.js"],"sourcesContent":["import * as React from 'react';\r\nimport Layout from './Layout';\r\n\r\nfunction BlogLayout({ children }) {\r\n  return (\r\n    <Layout>\r\n      <div id=\"blog-wrapper\" className=\"container\">\r\n        <main>{children}</main>\r\n      </div>\r\n    </Layout>\r\n\r\n  );\r\n}\r\n\r\nexport default BlogLayout;\r\n","/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\nimport { StaticImage } from 'gatsby-plugin-image';\r\n\r\nfunction Bio() {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            github\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author;\r\n  const social = data.site.siteMetadata?.social;\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      <StaticImage\r\n        className=\"bio-avatar\"\r\n        layout=\"fixed\"\r\n        formats={['auto', 'webp', 'avif']}\r\n        src=\"../images/adiela_abishua.jpg\"\r\n        width={50}\r\n        height={50}\r\n        quality={95}\r\n        alt=\"Profile picture\"\r\n      />\r\n      {author?.name && (\r\n        <p>\r\n          Written by\r\n          {' '}\r\n          <strong><a href={`https://github.com/${social?.github || ''}`}>{author.name}</a></strong>\r\n          {' '}\r\n          {author?.summary || null}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bio;\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `,\r\n  );\r\n\r\n  const metaDescription = description || site.siteMetadata.description;\r\n  const defaultTitle = site.siteMetadata?.title;\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ''}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Seo;\r\n","import * as React from 'react';\r\nimport { Link, graphql } from 'gatsby';\r\n\r\nimport Bio from '../components/bio';\r\nimport Layout from '../components/BlogLayout';\r\nimport Seo from '../components/seo';\r\n\r\nfunction BlogPostTemplate({\r\n  data: {\r\n    previous, next, site, markdownRemark: post,\r\n  },\r\n  location,\r\n}) {\r\n  const siteTitle = site.siteMetadata?.title || 'Title';\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n          <p>{post.frontmatter.date}</p>\r\n        </header>\r\n        <section\r\n          dangerouslySetInnerHTML={{ __html: post.html }}\r\n          itemProp=\"articleBody\"\r\n        />\r\n        <hr />\r\n        <footer>\r\n          <Bio />\r\n        </footer>\r\n      </article>\r\n      <nav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-between',\r\n            listStyle: 'none',\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ←\r\n                {' '}\r\n                {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title}\r\n                {' '}\r\n                →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport function Head({ data: { markdownRemark: post } }) {\r\n  return (\r\n    <Seo\r\n      title={post.frontmatter.title}\r\n      description={post.frontmatter.description || post.excerpt}\r\n    />\r\n  );\r\n}\r\n\r\nexport default BlogPostTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["children","id","className","data","useStaticQuery","author","site","siteMetadata","social","S","layout","formats","src","width","height","quality","alt","name","href","github","summary","description","title","metaDescription","defaultTitle","content","property","twitter","Head","markdownRemark","post","frontmatter","excerpt","previous","next","location","siteTitle","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}